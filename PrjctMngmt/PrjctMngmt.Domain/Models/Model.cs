//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EntityModel", "ProjectTask", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Project), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.Task), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "TaskTaskAssignment", "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Task), "TaskAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.TaskAssignment), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "DeveloperMessage", "Developer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Developer), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.Message), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "TopicMessage", "Topic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Topic), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.Message), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "DeveloperDocument", "Developer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Developer), "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.Document), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "DeveloperTaskAssignment", "Developer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Developer), "TaskAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.TaskAssignment), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "ProjectNote", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Project), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.Note), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "ClientProject", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PrjctMngmt.Models.Client), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.Project), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "ProjectProjectAssignment", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Project), "ProjectRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.ProjectAssignment), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "DeveloperProjectAssignment", "Developer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Developer), "ProjectRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.ProjectAssignment), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "IssueIssueAssignment", "Issue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Issue), "IssueAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.IssueAssignment), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "DeveloperIssueAssignment", "Developer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Developer), "IssueAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.IssueAssignment), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "DeveloperIssueAttachment", "Developer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Developer), "IssueAttachment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.IssueAttachment), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "IssueIssueAttachment", "Issue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Issue), "IssueAttachment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.IssueAttachment), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "MilestoneIssue", "Milestone", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PrjctMngmt.Models.Milestone), "Issue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.Issue), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "ProjectMilestone", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PrjctMngmt.Models.Project), "Milestone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.Milestone), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "ProjectCategoryProject", "ProjectCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PrjctMngmt.Models.ProjectCategory), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.Project), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "ProjectIssue", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Project), "Issue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.Issue), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "DeveloperNote", "Developer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Developer), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.Note), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "TaskCategoryTask", "TaskCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PrjctMngmt.Models.TaskCategory), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.Task), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "TeamDeveloper", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PrjctMngmt.Models.Team), "Developer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.Developer), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "IssueCategoryIssue", "IssueCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PrjctMngmt.Models.IssueCategory), "Issue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.Issue), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "ConferenceConferenceAttendant", "Conference", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Conference), "ConferenceAttendant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.ConferenceAttendant), true)]
[assembly: EdmRelationshipAttribute("EntityModel", "DeveloperConferenceAttendant", "Developer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrjctMngmt.Models.Developer), "ConferenceAttendant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrjctMngmt.Models.ConferenceAttendant), true)]

#endregion

namespace PrjctMngmt.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EntityModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EntityModelContainer object using the connection string found in the 'EntityModelContainer' section of the application configuration file.
        /// </summary>
        public EntityModelContainer() : base("name=EntityModelContainer", "EntityModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EntityModelContainer object.
        /// </summary>
        public EntityModelContainer(string connectionString) : base(connectionString, "EntityModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EntityModelContainer object.
        /// </summary>
        public EntityModelContainer(EntityConnection connection) : base(connection, "EntityModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Developer> Developers
        {
            get
            {
                if ((_Developers == null))
                {
                    _Developers = base.CreateObjectSet<Developer>("Developers");
                }
                return _Developers;
            }
        }
        private ObjectSet<Developer> _Developers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskCategory> TaskCategories
        {
            get
            {
                if ((_TaskCategories == null))
                {
                    _TaskCategories = base.CreateObjectSet<TaskCategory>("TaskCategories");
                }
                return _TaskCategories;
            }
        }
        private ObjectSet<TaskCategory> _TaskCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Document>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Document> _Documents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskAssignment> TaskAssignments
        {
            get
            {
                if ((_TaskAssignments == null))
                {
                    _TaskAssignments = base.CreateObjectSet<TaskAssignment>("TaskAssignments");
                }
                return _TaskAssignments;
            }
        }
        private ObjectSet<TaskAssignment> _TaskAssignments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Note> Notes
        {
            get
            {
                if ((_Notes == null))
                {
                    _Notes = base.CreateObjectSet<Note>("Notes");
                }
                return _Notes;
            }
        }
        private ObjectSet<Note> _Notes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Topic> Topics
        {
            get
            {
                if ((_Topics == null))
                {
                    _Topics = base.CreateObjectSet<Topic>("Topics");
                }
                return _Topics;
            }
        }
        private ObjectSet<Topic> _Topics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectCategory> ProjectCategories
        {
            get
            {
                if ((_ProjectCategories == null))
                {
                    _ProjectCategories = base.CreateObjectSet<ProjectCategory>("ProjectCategories");
                }
                return _ProjectCategories;
            }
        }
        private ObjectSet<ProjectCategory> _ProjectCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueCategory> IssueCategories
        {
            get
            {
                if ((_IssueCategories == null))
                {
                    _IssueCategories = base.CreateObjectSet<IssueCategory>("IssueCategories");
                }
                return _IssueCategories;
            }
        }
        private ObjectSet<IssueCategory> _IssueCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Issue> Issues
        {
            get
            {
                if ((_Issues == null))
                {
                    _Issues = base.CreateObjectSet<Issue>("Issues");
                }
                return _Issues;
            }
        }
        private ObjectSet<Issue> _Issues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectAssignment> ProjectAssignments
        {
            get
            {
                if ((_ProjectAssignments == null))
                {
                    _ProjectAssignments = base.CreateObjectSet<ProjectAssignment>("ProjectAssignments");
                }
                return _ProjectAssignments;
            }
        }
        private ObjectSet<ProjectAssignment> _ProjectAssignments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Milestone> Milestones
        {
            get
            {
                if ((_Milestones == null))
                {
                    _Milestones = base.CreateObjectSet<Milestone>("Milestones");
                }
                return _Milestones;
            }
        }
        private ObjectSet<Milestone> _Milestones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueAttachment> IssueAttachments
        {
            get
            {
                if ((_IssueAttachments == null))
                {
                    _IssueAttachments = base.CreateObjectSet<IssueAttachment>("IssueAttachments");
                }
                return _IssueAttachments;
            }
        }
        private ObjectSet<IssueAttachment> _IssueAttachments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueAssignment> IssueAssignments
        {
            get
            {
                if ((_IssueAssignments == null))
                {
                    _IssueAssignments = base.CreateObjectSet<IssueAssignment>("IssueAssignments");
                }
                return _IssueAssignments;
            }
        }
        private ObjectSet<IssueAssignment> _IssueAssignments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Conference> Conferences
        {
            get
            {
                if ((_Conferences == null))
                {
                    _Conferences = base.CreateObjectSet<Conference>("Conferences");
                }
                return _Conferences;
            }
        }
        private ObjectSet<Conference> _Conferences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConferenceAttendant> ConferenceAttendants
        {
            get
            {
                if ((_ConferenceAttendants == null))
                {
                    _ConferenceAttendants = base.CreateObjectSet<ConferenceAttendant>("ConferenceAttendants");
                }
                return _ConferenceAttendants;
            }
        }
        private ObjectSet<ConferenceAttendant> _ConferenceAttendants;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Developers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDevelopers(Developer developer)
        {
            base.AddObject("Developers", developer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskCategories(TaskCategory taskCategory)
        {
            base.AddObject("TaskCategories", taskCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocuments(Document document)
        {
            base.AddObject("Documents", document);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskAssignments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskAssignments(TaskAssignment taskAssignment)
        {
            base.AddObject("TaskAssignments", taskAssignment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotes(Note note)
        {
            base.AddObject("Notes", note);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Topics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTopics(Topic topic)
        {
            base.AddObject("Topics", topic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectCategories(ProjectCategory projectCategory)
        {
            base.AddObject("ProjectCategories", projectCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueCategories(IssueCategory issueCategory)
        {
            base.AddObject("IssueCategories", issueCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Issues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssues(Issue issue)
        {
            base.AddObject("Issues", issue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectAssignments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectAssignments(ProjectAssignment projectAssignment)
        {
            base.AddObject("ProjectAssignments", projectAssignment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Milestones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMilestones(Milestone milestone)
        {
            base.AddObject("Milestones", milestone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueAttachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueAttachments(IssueAttachment issueAttachment)
        {
            base.AddObject("IssueAttachments", issueAttachment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueAssignments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueAssignments(IssueAssignment issueAssignment)
        {
            base.AddObject("IssueAssignments", issueAssignment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Conferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConferences(Conference conference)
        {
            base.AddObject("Conferences", conference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConferenceAttendants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConferenceAttendants(ConferenceAttendant conferenceAttendant)
        {
            base.AddObject("ConferenceAttendants", conferenceAttendant);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="representative">Initial value of the Representative property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        public static Client CreateClient(global::System.Int32 clientID, global::System.String name, global::System.String representative, global::System.String phoneNumber)
        {
            Client client = new Client();
            client.ClientID = clientID;
            client.Name = name;
            client.Representative = representative;
            client.PhoneNumber = phoneNumber;
            return client;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                if (_ClientID != value)
                {
                    OnClientIDChanging(value);
                    ReportPropertyChanging("ClientID");
                    _ClientID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClientID");
                    OnClientIDChanged();
                }
            }
        }
        private global::System.Int32 _ClientID;
        partial void OnClientIDChanging(global::System.Int32 value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Representative
        {
            get
            {
                return _Representative;
            }
            set
            {
                OnRepresentativeChanging(value);
                ReportPropertyChanging("Representative");
                _Representative = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Representative");
                OnRepresentativeChanged();
            }
        }
        private global::System.String _Representative;
        partial void OnRepresentativeChanging(global::System.String value);
        partial void OnRepresentativeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "ClientProject", "Project")]
        public EntityCollection<Project> Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("EntityModel.ClientProject", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("EntityModel.ClientProject", "Project", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Conference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Conference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Conference object.
        /// </summary>
        /// <param name="conferenceID">Initial value of the ConferenceID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="contactPhone">Initial value of the ContactPhone property.</param>
        /// <param name="organizer">Initial value of the Organizer property.</param>
        /// <param name="room">Initial value of the Room property.</param>
        public static Conference CreateConference(global::System.Int32 conferenceID, global::System.String name, global::System.DateTime date, global::System.String address, global::System.String country, global::System.String contactPhone, global::System.String organizer, global::System.String room)
        {
            Conference conference = new Conference();
            conference.ConferenceID = conferenceID;
            conference.Name = name;
            conference.Date = date;
            conference.Address = address;
            conference.Country = country;
            conference.ContactPhone = contactPhone;
            conference.Organizer = organizer;
            conference.Room = room;
            return conference;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConferenceID
        {
            get
            {
                return _ConferenceID;
            }
            set
            {
                if (_ConferenceID != value)
                {
                    OnConferenceIDChanging(value);
                    ReportPropertyChanging("ConferenceID");
                    _ConferenceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConferenceID");
                    OnConferenceIDChanged();
                }
            }
        }
        private global::System.Int32 _ConferenceID;
        partial void OnConferenceIDChanging(global::System.Int32 value);
        partial void OnConferenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactPhone
        {
            get
            {
                return _ContactPhone;
            }
            set
            {
                OnContactPhoneChanging(value);
                ReportPropertyChanging("ContactPhone");
                _ContactPhone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactPhone");
                OnContactPhoneChanged();
            }
        }
        private global::System.String _ContactPhone;
        partial void OnContactPhoneChanging(global::System.String value);
        partial void OnContactPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Organizer
        {
            get
            {
                return _Organizer;
            }
            set
            {
                OnOrganizerChanging(value);
                ReportPropertyChanging("Organizer");
                _Organizer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Organizer");
                OnOrganizerChanged();
            }
        }
        private global::System.String _Organizer;
        partial void OnOrganizerChanging(global::System.String value);
        partial void OnOrganizerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Room
        {
            get
            {
                return _Room;
            }
            set
            {
                OnRoomChanging(value);
                ReportPropertyChanging("Room");
                _Room = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Room");
                OnRoomChanged();
            }
        }
        private global::System.String _Room;
        partial void OnRoomChanging(global::System.String value);
        partial void OnRoomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private Nullable<global::System.Int32> _Latitude;
        partial void OnLatitudeChanging(Nullable<global::System.Int32> value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private Nullable<global::System.Int32> _Longitude;
        partial void OnLongitudeChanging(Nullable<global::System.Int32> value);
        partial void OnLongitudeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "ConferenceConferenceAttendant", "ConferenceAttendant")]
        public EntityCollection<ConferenceAttendant> ConferenceAttendant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConferenceAttendant>("EntityModel.ConferenceConferenceAttendant", "ConferenceAttendant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConferenceAttendant>("EntityModel.ConferenceConferenceAttendant", "ConferenceAttendant", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="ConferenceAttendant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConferenceAttendant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConferenceAttendant object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="conferenceID">Initial value of the ConferenceID property.</param>
        /// <param name="developerID">Initial value of the DeveloperID property.</param>
        public static ConferenceAttendant CreateConferenceAttendant(global::System.Int32 id, global::System.Int32 conferenceID, global::System.Int32 developerID)
        {
            ConferenceAttendant conferenceAttendant = new ConferenceAttendant();
            conferenceAttendant.ID = id;
            conferenceAttendant.ConferenceID = conferenceID;
            conferenceAttendant.DeveloperID = developerID;
            return conferenceAttendant;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConferenceID
        {
            get
            {
                return _ConferenceID;
            }
            set
            {
                OnConferenceIDChanging(value);
                ReportPropertyChanging("ConferenceID");
                _ConferenceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConferenceID");
                OnConferenceIDChanged();
            }
        }
        private global::System.Int32 _ConferenceID;
        partial void OnConferenceIDChanging(global::System.Int32 value);
        partial void OnConferenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeveloperID
        {
            get
            {
                return _DeveloperID;
            }
            set
            {
                OnDeveloperIDChanging(value);
                ReportPropertyChanging("DeveloperID");
                _DeveloperID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeveloperID");
                OnDeveloperIDChanged();
            }
        }
        private global::System.Int32 _DeveloperID;
        partial void OnDeveloperIDChanging(global::System.Int32 value);
        partial void OnDeveloperIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "ConferenceConferenceAttendant", "Conference")]
        public Conference Conference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conference>("EntityModel.ConferenceConferenceAttendant", "Conference").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conference>("EntityModel.ConferenceConferenceAttendant", "Conference").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Conference> ConferenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conference>("EntityModel.ConferenceConferenceAttendant", "Conference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Conference>("EntityModel.ConferenceConferenceAttendant", "Conference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "DeveloperConferenceAttendant", "Developer")]
        public Developer Developer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperConferenceAttendant", "Developer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperConferenceAttendant", "Developer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Developer> DeveloperReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperConferenceAttendant", "Developer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Developer>("EntityModel.DeveloperConferenceAttendant", "Developer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Developer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Developer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Developer object.
        /// </summary>
        /// <param name="developerID">Initial value of the DeveloperID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static Developer CreateDeveloper(global::System.Int32 developerID, global::System.String firstName, global::System.String lastName, global::System.String userName)
        {
            Developer developer = new Developer();
            developer.DeveloperID = developerID;
            developer.FirstName = firstName;
            developer.LastName = lastName;
            developer.UserName = userName;
            return developer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeveloperID
        {
            get
            {
                return _DeveloperID;
            }
            set
            {
                if (_DeveloperID != value)
                {
                    OnDeveloperIDChanging(value);
                    ReportPropertyChanging("DeveloperID");
                    _DeveloperID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeveloperID");
                    OnDeveloperIDChanged();
                }
            }
        }
        private global::System.Int32 _DeveloperID;
        partial void OnDeveloperIDChanging(global::System.Int32 value);
        partial void OnDeveloperIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TeamName
        {
            get
            {
                return _TeamName;
            }
            set
            {
                OnTeamNameChanging(value);
                ReportPropertyChanging("TeamName");
                _TeamName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TeamName");
                OnTeamNameChanged();
            }
        }
        private global::System.String _TeamName;
        partial void OnTeamNameChanging(global::System.String value);
        partial void OnTeamNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "DeveloperMessage", "Message")]
        public EntityCollection<Message> Message
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("EntityModel.DeveloperMessage", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("EntityModel.DeveloperMessage", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "DeveloperDocument", "Document")]
        public EntityCollection<Document> Document
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("EntityModel.DeveloperDocument", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("EntityModel.DeveloperDocument", "Document", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "DeveloperTaskAssignment", "TaskAssignment")]
        public EntityCollection<TaskAssignment> TaskAssignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskAssignment>("EntityModel.DeveloperTaskAssignment", "TaskAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskAssignment>("EntityModel.DeveloperTaskAssignment", "TaskAssignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "DeveloperProjectAssignment", "ProjectRole")]
        public EntityCollection<ProjectAssignment> ProjectRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectAssignment>("EntityModel.DeveloperProjectAssignment", "ProjectRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectAssignment>("EntityModel.DeveloperProjectAssignment", "ProjectRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "DeveloperIssueAssignment", "IssueAssignment")]
        public EntityCollection<IssueAssignment> IssueAssignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueAssignment>("EntityModel.DeveloperIssueAssignment", "IssueAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueAssignment>("EntityModel.DeveloperIssueAssignment", "IssueAssignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "DeveloperIssueAttachment", "IssueAttachment")]
        public EntityCollection<IssueAttachment> IssueAttachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueAttachment>("EntityModel.DeveloperIssueAttachment", "IssueAttachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueAttachment>("EntityModel.DeveloperIssueAttachment", "IssueAttachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "DeveloperNote", "Note")]
        public EntityCollection<Note> Note
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("EntityModel.DeveloperNote", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("EntityModel.DeveloperNote", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "TeamDeveloper", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("EntityModel.TeamDeveloper", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("EntityModel.TeamDeveloper", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("EntityModel.TeamDeveloper", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("EntityModel.TeamDeveloper", "Team", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "DeveloperConferenceAttendant", "ConferenceAttendant")]
        public EntityCollection<ConferenceAttendant> ConferenceAttendant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConferenceAttendant>("EntityModel.DeveloperConferenceAttendant", "ConferenceAttendant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConferenceAttendant>("EntityModel.DeveloperConferenceAttendant", "ConferenceAttendant", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Document object.
        /// </summary>
        /// <param name="documentID">Initial value of the DocumentID property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="entryDate">Initial value of the EntryDate property.</param>
        /// <param name="developerID">Initial value of the DeveloperID property.</param>
        /// <param name="mimeType">Initial value of the MimeType property.</param>
        public static Document CreateDocument(global::System.Int32 documentID, global::System.String fileName, global::System.String name, global::System.DateTime entryDate, global::System.Int32 developerID, global::System.String mimeType)
        {
            Document document = new Document();
            document.DocumentID = documentID;
            document.FileName = fileName;
            document.Name = name;
            document.EntryDate = entryDate;
            document.DeveloperID = developerID;
            document.MimeType = mimeType;
            return document;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentID
        {
            get
            {
                return _DocumentID;
            }
            set
            {
                if (_DocumentID != value)
                {
                    OnDocumentIDChanging(value);
                    ReportPropertyChanging("DocumentID");
                    _DocumentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DocumentID");
                    OnDocumentIDChanged();
                }
            }
        }
        private global::System.Int32 _DocumentID;
        partial void OnDocumentIDChanging(global::System.Int32 value);
        partial void OnDocumentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private global::System.DateTime _EntryDate;
        partial void OnEntryDateChanging(global::System.DateTime value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeveloperID
        {
            get
            {
                return _DeveloperID;
            }
            set
            {
                OnDeveloperIDChanging(value);
                ReportPropertyChanging("DeveloperID");
                _DeveloperID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeveloperID");
                OnDeveloperIDChanged();
            }
        }
        private global::System.Int32 _DeveloperID;
        partial void OnDeveloperIDChanging(global::System.Int32 value);
        partial void OnDeveloperIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MimeType
        {
            get
            {
                return _MimeType;
            }
            set
            {
                OnMimeTypeChanging(value);
                ReportPropertyChanging("MimeType");
                _MimeType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MimeType");
                OnMimeTypeChanged();
            }
        }
        private global::System.String _MimeType;
        partial void OnMimeTypeChanging(global::System.String value);
        partial void OnMimeTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "DeveloperDocument", "Developer")]
        public Developer Developer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperDocument", "Developer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperDocument", "Developer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Developer> DeveloperReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperDocument", "Developer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Developer>("EntityModel.DeveloperDocument", "Developer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Issue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Issue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Issue object.
        /// </summary>
        /// <param name="issueID">Initial value of the IssueID property.</param>
        /// <param name="summary">Initial value of the Summary property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        public static Issue CreateIssue(global::System.Int32 issueID, global::System.String summary, global::System.String description, global::System.Int32 projectID)
        {
            Issue issue = new Issue();
            issue.IssueID = issueID;
            issue.Summary = summary;
            issue.Description = description;
            issue.ProjectID = projectID;
            return issue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueID
        {
            get
            {
                return _IssueID;
            }
            set
            {
                if (_IssueID != value)
                {
                    OnIssueIDChanging(value);
                    ReportPropertyChanging("IssueID");
                    _IssueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueID");
                    OnIssueIDChanged();
                }
            }
        }
        private global::System.Int32 _IssueID;
        partial void OnIssueIDChanging(global::System.Int32 value);
        partial void OnIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Summary
        {
            get
            {
                return _Summary;
            }
            set
            {
                OnSummaryChanging(value);
                ReportPropertyChanging("Summary");
                _Summary = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Summary");
                OnSummaryChanged();
            }
        }
        private global::System.String _Summary;
        partial void OnSummaryChanging(global::System.String value);
        partial void OnSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.String _Priority;
        partial void OnPriorityChanging(global::System.String value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Severity
        {
            get
            {
                return _Severity;
            }
            set
            {
                OnSeverityChanging(value);
                ReportPropertyChanging("Severity");
                _Severity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Severity");
                OnSeverityChanged();
            }
        }
        private global::System.String _Severity;
        partial void OnSeverityChanging(global::System.String value);
        partial void OnSeverityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EntryDate;
        partial void OnEntryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MilestoneID
        {
            get
            {
                return _MilestoneID;
            }
            set
            {
                OnMilestoneIDChanging(value);
                ReportPropertyChanging("MilestoneID");
                _MilestoneID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MilestoneID");
                OnMilestoneIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MilestoneID;
        partial void OnMilestoneIDChanging(Nullable<global::System.Int32> value);
        partial void OnMilestoneIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssueCategoryName
        {
            get
            {
                return _IssueCategoryName;
            }
            set
            {
                OnIssueCategoryNameChanging(value);
                ReportPropertyChanging("IssueCategoryName");
                _IssueCategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssueCategoryName");
                OnIssueCategoryNameChanged();
            }
        }
        private global::System.String _IssueCategoryName;
        partial void OnIssueCategoryNameChanging(global::System.String value);
        partial void OnIssueCategoryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "IssueIssueAssignment", "IssueAssignment")]
        public EntityCollection<IssueAssignment> IssueAssignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueAssignment>("EntityModel.IssueIssueAssignment", "IssueAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueAssignment>("EntityModel.IssueIssueAssignment", "IssueAssignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "IssueIssueAttachment", "IssueAttachment")]
        public EntityCollection<IssueAttachment> IssueAttachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueAttachment>("EntityModel.IssueIssueAttachment", "IssueAttachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueAttachment>("EntityModel.IssueIssueAttachment", "IssueAttachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "MilestoneIssue", "Milestone")]
        public Milestone Milestone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Milestone>("EntityModel.MilestoneIssue", "Milestone").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Milestone>("EntityModel.MilestoneIssue", "Milestone").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Milestone> MilestoneReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Milestone>("EntityModel.MilestoneIssue", "Milestone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Milestone>("EntityModel.MilestoneIssue", "Milestone", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "ProjectIssue", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("EntityModel.ProjectIssue", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("EntityModel.ProjectIssue", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("EntityModel.ProjectIssue", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("EntityModel.ProjectIssue", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "IssueCategoryIssue", "IssueCategory")]
        public IssueCategory IssueCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueCategory>("EntityModel.IssueCategoryIssue", "IssueCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueCategory>("EntityModel.IssueCategoryIssue", "IssueCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IssueCategory> IssueCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueCategory>("EntityModel.IssueCategoryIssue", "IssueCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IssueCategory>("EntityModel.IssueCategoryIssue", "IssueCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="IssueAssignment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueAssignment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueAssignment object.
        /// </summary>
        /// <param name="issueAssignmentID">Initial value of the IssueAssignmentID property.</param>
        /// <param name="issueID">Initial value of the IssueID property.</param>
        /// <param name="developerID">Initial value of the DeveloperID property.</param>
        public static IssueAssignment CreateIssueAssignment(global::System.Int32 issueAssignmentID, global::System.Int32 issueID, global::System.Int32 developerID)
        {
            IssueAssignment issueAssignment = new IssueAssignment();
            issueAssignment.IssueAssignmentID = issueAssignmentID;
            issueAssignment.IssueID = issueID;
            issueAssignment.DeveloperID = developerID;
            return issueAssignment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueAssignmentID
        {
            get
            {
                return _IssueAssignmentID;
            }
            set
            {
                if (_IssueAssignmentID != value)
                {
                    OnIssueAssignmentIDChanging(value);
                    ReportPropertyChanging("IssueAssignmentID");
                    _IssueAssignmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueAssignmentID");
                    OnIssueAssignmentIDChanged();
                }
            }
        }
        private global::System.Int32 _IssueAssignmentID;
        partial void OnIssueAssignmentIDChanging(global::System.Int32 value);
        partial void OnIssueAssignmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueID
        {
            get
            {
                return _IssueID;
            }
            set
            {
                OnIssueIDChanging(value);
                ReportPropertyChanging("IssueID");
                _IssueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueID");
                OnIssueIDChanged();
            }
        }
        private global::System.Int32 _IssueID;
        partial void OnIssueIDChanging(global::System.Int32 value);
        partial void OnIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeveloperID
        {
            get
            {
                return _DeveloperID;
            }
            set
            {
                OnDeveloperIDChanging(value);
                ReportPropertyChanging("DeveloperID");
                _DeveloperID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeveloperID");
                OnDeveloperIDChanged();
            }
        }
        private global::System.Int32 _DeveloperID;
        partial void OnDeveloperIDChanging(global::System.Int32 value);
        partial void OnDeveloperIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "IssueIssueAssignment", "Issue")]
        public Issue Issue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("EntityModel.IssueIssueAssignment", "Issue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("EntityModel.IssueIssueAssignment", "Issue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Issue> IssueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("EntityModel.IssueIssueAssignment", "Issue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Issue>("EntityModel.IssueIssueAssignment", "Issue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "DeveloperIssueAssignment", "Developer")]
        public Developer Developer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperIssueAssignment", "Developer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperIssueAssignment", "Developer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Developer> DeveloperReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperIssueAssignment", "Developer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Developer>("EntityModel.DeveloperIssueAssignment", "Developer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="IssueAttachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueAttachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueAttachment object.
        /// </summary>
        /// <param name="issueAttachmentID">Initial value of the IssueAttachmentID property.</param>
        /// <param name="filename">Initial value of the Filename property.</param>
        /// <param name="entryDate">Initial value of the EntryDate property.</param>
        /// <param name="developerID">Initial value of the DeveloperID property.</param>
        /// <param name="issueID">Initial value of the IssueID property.</param>
        /// <param name="mimeType">Initial value of the MimeType property.</param>
        public static IssueAttachment CreateIssueAttachment(global::System.Int32 issueAttachmentID, global::System.String filename, global::System.DateTime entryDate, global::System.Int32 developerID, global::System.Int32 issueID, global::System.String mimeType)
        {
            IssueAttachment issueAttachment = new IssueAttachment();
            issueAttachment.IssueAttachmentID = issueAttachmentID;
            issueAttachment.Filename = filename;
            issueAttachment.EntryDate = entryDate;
            issueAttachment.DeveloperID = developerID;
            issueAttachment.IssueID = issueID;
            issueAttachment.MimeType = mimeType;
            return issueAttachment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueAttachmentID
        {
            get
            {
                return _IssueAttachmentID;
            }
            set
            {
                if (_IssueAttachmentID != value)
                {
                    OnIssueAttachmentIDChanging(value);
                    ReportPropertyChanging("IssueAttachmentID");
                    _IssueAttachmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueAttachmentID");
                    OnIssueAttachmentIDChanged();
                }
            }
        }
        private global::System.Int32 _IssueAttachmentID;
        partial void OnIssueAttachmentIDChanging(global::System.Int32 value);
        partial void OnIssueAttachmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                OnFilenameChanging(value);
                ReportPropertyChanging("Filename");
                _Filename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Filename");
                OnFilenameChanged();
            }
        }
        private global::System.String _Filename;
        partial void OnFilenameChanging(global::System.String value);
        partial void OnFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private global::System.DateTime _EntryDate;
        partial void OnEntryDateChanging(global::System.DateTime value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeveloperID
        {
            get
            {
                return _DeveloperID;
            }
            set
            {
                OnDeveloperIDChanging(value);
                ReportPropertyChanging("DeveloperID");
                _DeveloperID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeveloperID");
                OnDeveloperIDChanged();
            }
        }
        private global::System.Int32 _DeveloperID;
        partial void OnDeveloperIDChanging(global::System.Int32 value);
        partial void OnDeveloperIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueID
        {
            get
            {
                return _IssueID;
            }
            set
            {
                OnIssueIDChanging(value);
                ReportPropertyChanging("IssueID");
                _IssueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueID");
                OnIssueIDChanged();
            }
        }
        private global::System.Int32 _IssueID;
        partial void OnIssueIDChanging(global::System.Int32 value);
        partial void OnIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MimeType
        {
            get
            {
                return _MimeType;
            }
            set
            {
                OnMimeTypeChanging(value);
                ReportPropertyChanging("MimeType");
                _MimeType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MimeType");
                OnMimeTypeChanged();
            }
        }
        private global::System.String _MimeType;
        partial void OnMimeTypeChanging(global::System.String value);
        partial void OnMimeTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "DeveloperIssueAttachment", "Developer")]
        public Developer Developer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperIssueAttachment", "Developer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperIssueAttachment", "Developer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Developer> DeveloperReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperIssueAttachment", "Developer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Developer>("EntityModel.DeveloperIssueAttachment", "Developer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "IssueIssueAttachment", "Issue")]
        public Issue Issue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("EntityModel.IssueIssueAttachment", "Issue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("EntityModel.IssueIssueAttachment", "Issue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Issue> IssueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("EntityModel.IssueIssueAttachment", "Issue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Issue>("EntityModel.IssueIssueAttachment", "Issue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="IssueCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueCategory object.
        /// </summary>
        /// <param name="issueCategoryName">Initial value of the IssueCategoryName property.</param>
        public static IssueCategory CreateIssueCategory(global::System.String issueCategoryName)
        {
            IssueCategory issueCategory = new IssueCategory();
            issueCategory.IssueCategoryName = issueCategoryName;
            return issueCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IssueCategoryName
        {
            get
            {
                return _IssueCategoryName;
            }
            set
            {
                if (_IssueCategoryName != value)
                {
                    OnIssueCategoryNameChanging(value);
                    ReportPropertyChanging("IssueCategoryName");
                    _IssueCategoryName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("IssueCategoryName");
                    OnIssueCategoryNameChanged();
                }
            }
        }
        private global::System.String _IssueCategoryName;
        partial void OnIssueCategoryNameChanging(global::System.String value);
        partial void OnIssueCategoryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "IssueCategoryIssue", "Issue")]
        public EntityCollection<Issue> Issue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Issue>("EntityModel.IssueCategoryIssue", "Issue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Issue>("EntityModel.IssueCategoryIssue", "Issue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="messageID">Initial value of the MessageID property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        /// <param name="entryDate">Initial value of the EntryDate property.</param>
        /// <param name="developerID">Initial value of the DeveloperID property.</param>
        /// <param name="topicID">Initial value of the TopicID property.</param>
        public static Message CreateMessage(global::System.Int32 messageID, global::System.String data, global::System.DateTime entryDate, global::System.Int32 developerID, global::System.Int32 topicID)
        {
            Message message = new Message();
            message.MessageID = messageID;
            message.Data = data;
            message.EntryDate = entryDate;
            message.DeveloperID = developerID;
            message.TopicID = topicID;
            return message;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageID
        {
            get
            {
                return _MessageID;
            }
            set
            {
                if (_MessageID != value)
                {
                    OnMessageIDChanging(value);
                    ReportPropertyChanging("MessageID");
                    _MessageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageID");
                    OnMessageIDChanged();
                }
            }
        }
        private global::System.Int32 _MessageID;
        partial void OnMessageIDChanging(global::System.Int32 value);
        partial void OnMessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private global::System.DateTime _EntryDate;
        partial void OnEntryDateChanging(global::System.DateTime value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeveloperID
        {
            get
            {
                return _DeveloperID;
            }
            set
            {
                OnDeveloperIDChanging(value);
                ReportPropertyChanging("DeveloperID");
                _DeveloperID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeveloperID");
                OnDeveloperIDChanged();
            }
        }
        private global::System.Int32 _DeveloperID;
        partial void OnDeveloperIDChanging(global::System.Int32 value);
        partial void OnDeveloperIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TopicID
        {
            get
            {
                return _TopicID;
            }
            set
            {
                OnTopicIDChanging(value);
                ReportPropertyChanging("TopicID");
                _TopicID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopicID");
                OnTopicIDChanged();
            }
        }
        private global::System.Int32 _TopicID;
        partial void OnTopicIDChanging(global::System.Int32 value);
        partial void OnTopicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EditDate
        {
            get
            {
                return _EditDate;
            }
            set
            {
                OnEditDateChanging(value);
                ReportPropertyChanging("EditDate");
                _EditDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditDate");
                OnEditDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EditDate;
        partial void OnEditDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEditDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "DeveloperMessage", "Developer")]
        public Developer Developer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperMessage", "Developer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperMessage", "Developer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Developer> DeveloperReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperMessage", "Developer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Developer>("EntityModel.DeveloperMessage", "Developer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "TopicMessage", "Topic")]
        public Topic Topic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("EntityModel.TopicMessage", "Topic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("EntityModel.TopicMessage", "Topic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Topic> TopicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("EntityModel.TopicMessage", "Topic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Topic>("EntityModel.TopicMessage", "Topic", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Milestone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Milestone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Milestone object.
        /// </summary>
        /// <param name="milestoneID">Initial value of the MilestoneID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Milestone CreateMilestone(global::System.Int32 milestoneID, global::System.String name)
        {
            Milestone milestone = new Milestone();
            milestone.MilestoneID = milestoneID;
            milestone.Name = name;
            return milestone;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MilestoneID
        {
            get
            {
                return _MilestoneID;
            }
            set
            {
                if (_MilestoneID != value)
                {
                    OnMilestoneIDChanging(value);
                    ReportPropertyChanging("MilestoneID");
                    _MilestoneID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MilestoneID");
                    OnMilestoneIDChanged();
                }
            }
        }
        private global::System.Int32 _MilestoneID;
        partial void OnMilestoneIDChanging(global::System.Int32 value);
        partial void OnMilestoneIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "MilestoneIssue", "Issue")]
        public EntityCollection<Issue> Issue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Issue>("EntityModel.MilestoneIssue", "Issue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Issue>("EntityModel.MilestoneIssue", "Issue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "ProjectMilestone", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("EntityModel.ProjectMilestone", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("EntityModel.ProjectMilestone", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("EntityModel.ProjectMilestone", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("EntityModel.ProjectMilestone", "Project", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Note")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Note : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Note object.
        /// </summary>
        /// <param name="noteID">Initial value of the NoteID property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="developerID">Initial value of the DeveloperID property.</param>
        /// <param name="locX">Initial value of the LocX property.</param>
        /// <param name="locY">Initial value of the LocY property.</param>
        public static Note CreateNote(global::System.Int32 noteID, global::System.String data, global::System.Int32 projectID, global::System.Int32 developerID, global::System.String locX, global::System.String locY)
        {
            Note note = new Note();
            note.NoteID = noteID;
            note.Data = data;
            note.ProjectID = projectID;
            note.DeveloperID = developerID;
            note.LocX = locX;
            note.LocY = locY;
            return note;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoteID
        {
            get
            {
                return _NoteID;
            }
            set
            {
                if (_NoteID != value)
                {
                    OnNoteIDChanging(value);
                    ReportPropertyChanging("NoteID");
                    _NoteID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NoteID");
                    OnNoteIDChanged();
                }
            }
        }
        private global::System.Int32 _NoteID;
        partial void OnNoteIDChanging(global::System.Int32 value);
        partial void OnNoteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeveloperID
        {
            get
            {
                return _DeveloperID;
            }
            set
            {
                OnDeveloperIDChanging(value);
                ReportPropertyChanging("DeveloperID");
                _DeveloperID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeveloperID");
                OnDeveloperIDChanged();
            }
        }
        private global::System.Int32 _DeveloperID;
        partial void OnDeveloperIDChanging(global::System.Int32 value);
        partial void OnDeveloperIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocX
        {
            get
            {
                return _LocX;
            }
            set
            {
                OnLocXChanging(value);
                ReportPropertyChanging("LocX");
                _LocX = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LocX");
                OnLocXChanged();
            }
        }
        private global::System.String _LocX;
        partial void OnLocXChanging(global::System.String value);
        partial void OnLocXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocY
        {
            get
            {
                return _LocY;
            }
            set
            {
                OnLocYChanging(value);
                ReportPropertyChanging("LocY");
                _LocY = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LocY");
                OnLocYChanged();
            }
        }
        private global::System.String _LocY;
        partial void OnLocYChanging(global::System.String value);
        partial void OnLocYChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "ProjectNote", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("EntityModel.ProjectNote", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("EntityModel.ProjectNote", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("EntityModel.ProjectNote", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("EntityModel.ProjectNote", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "DeveloperNote", "Developer")]
        public Developer Developer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperNote", "Developer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperNote", "Developer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Developer> DeveloperReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperNote", "Developer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Developer>("EntityModel.DeveloperNote", "Developer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Project CreateProject(global::System.Int32 projectID, global::System.String name)
        {
            Project project = new Project();
            project.ProjectID = projectID;
            project.Name = name;
            return project;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectCategoryID
        {
            get
            {
                return _ProjectCategoryID;
            }
            set
            {
                OnProjectCategoryIDChanging(value);
                ReportPropertyChanging("ProjectCategoryID");
                _ProjectCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectCategoryID");
                OnProjectCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectCategoryID;
        partial void OnProjectCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectCategoryIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "ProjectTask", "Task")]
        public EntityCollection<Task> Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("EntityModel.ProjectTask", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("EntityModel.ProjectTask", "Task", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "ProjectNote", "Note")]
        public EntityCollection<Note> Note
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("EntityModel.ProjectNote", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("EntityModel.ProjectNote", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "ClientProject", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("EntityModel.ClientProject", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("EntityModel.ClientProject", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("EntityModel.ClientProject", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("EntityModel.ClientProject", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "ProjectProjectAssignment", "ProjectRole")]
        public EntityCollection<ProjectAssignment> ProjectRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectAssignment>("EntityModel.ProjectProjectAssignment", "ProjectRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectAssignment>("EntityModel.ProjectProjectAssignment", "ProjectRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "ProjectMilestone", "Milestone")]
        public EntityCollection<Milestone> Milestone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Milestone>("EntityModel.ProjectMilestone", "Milestone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Milestone>("EntityModel.ProjectMilestone", "Milestone", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "ProjectCategoryProject", "ProjectCategory")]
        public ProjectCategory ProjectCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCategory>("EntityModel.ProjectCategoryProject", "ProjectCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCategory>("EntityModel.ProjectCategoryProject", "ProjectCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectCategory> ProjectCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCategory>("EntityModel.ProjectCategoryProject", "ProjectCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectCategory>("EntityModel.ProjectCategoryProject", "ProjectCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "ProjectIssue", "Issue")]
        public EntityCollection<Issue> Issue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Issue>("EntityModel.ProjectIssue", "Issue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Issue>("EntityModel.ProjectIssue", "Issue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="ProjectAssignment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectAssignment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectAssignment object.
        /// </summary>
        /// <param name="projectAssignmentID">Initial value of the ProjectAssignmentID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="developerID">Initial value of the DeveloperID property.</param>
        public static ProjectAssignment CreateProjectAssignment(global::System.Int32 projectAssignmentID, global::System.Int32 projectID, global::System.Int32 developerID)
        {
            ProjectAssignment projectAssignment = new ProjectAssignment();
            projectAssignment.ProjectAssignmentID = projectAssignmentID;
            projectAssignment.ProjectID = projectID;
            projectAssignment.DeveloperID = developerID;
            return projectAssignment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectAssignmentID
        {
            get
            {
                return _ProjectAssignmentID;
            }
            set
            {
                if (_ProjectAssignmentID != value)
                {
                    OnProjectAssignmentIDChanging(value);
                    ReportPropertyChanging("ProjectAssignmentID");
                    _ProjectAssignmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProjectAssignmentID");
                    OnProjectAssignmentIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectAssignmentID;
        partial void OnProjectAssignmentIDChanging(global::System.Int32 value);
        partial void OnProjectAssignmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeveloperID
        {
            get
            {
                return _DeveloperID;
            }
            set
            {
                OnDeveloperIDChanging(value);
                ReportPropertyChanging("DeveloperID");
                _DeveloperID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeveloperID");
                OnDeveloperIDChanged();
            }
        }
        private global::System.Int32 _DeveloperID;
        partial void OnDeveloperIDChanging(global::System.Int32 value);
        partial void OnDeveloperIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "ProjectProjectAssignment", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("EntityModel.ProjectProjectAssignment", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("EntityModel.ProjectProjectAssignment", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("EntityModel.ProjectProjectAssignment", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("EntityModel.ProjectProjectAssignment", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "DeveloperProjectAssignment", "Developer")]
        public Developer Developer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperProjectAssignment", "Developer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperProjectAssignment", "Developer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Developer> DeveloperReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperProjectAssignment", "Developer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Developer>("EntityModel.DeveloperProjectAssignment", "Developer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="ProjectCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectCategory object.
        /// </summary>
        /// <param name="projectCategoryID">Initial value of the ProjectCategoryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ProjectCategory CreateProjectCategory(global::System.Int32 projectCategoryID, global::System.String name)
        {
            ProjectCategory projectCategory = new ProjectCategory();
            projectCategory.ProjectCategoryID = projectCategoryID;
            projectCategory.Name = name;
            return projectCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCategoryID
        {
            get
            {
                return _ProjectCategoryID;
            }
            set
            {
                if (_ProjectCategoryID != value)
                {
                    OnProjectCategoryIDChanging(value);
                    ReportPropertyChanging("ProjectCategoryID");
                    _ProjectCategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProjectCategoryID");
                    OnProjectCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectCategoryID;
        partial void OnProjectCategoryIDChanging(global::System.Int32 value);
        partial void OnProjectCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "ProjectCategoryProject", "Project")]
        public EntityCollection<Project> Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("EntityModel.ProjectCategoryProject", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("EntityModel.ProjectCategoryProject", "Project", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        public static Task CreateTask(global::System.Int32 taskID, global::System.String name, global::System.Int32 projectID)
        {
            Task task = new Task();
            task.TaskID = taskID;
            task.Name = name;
            task.ProjectID = projectID;
            return task;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                if (_TaskID != value)
                {
                    OnTaskIDChanging(value);
                    ReportPropertyChanging("TaskID");
                    _TaskID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskID");
                    OnTaskIDChanged();
                }
            }
        }
        private global::System.Int32 _TaskID;
        partial void OnTaskIDChanging(global::System.Int32 value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExpectedWorkHours
        {
            get
            {
                return _ExpectedWorkHours;
            }
            set
            {
                OnExpectedWorkHoursChanging(value);
                ReportPropertyChanging("ExpectedWorkHours");
                _ExpectedWorkHours = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpectedWorkHours");
                OnExpectedWorkHoursChanged();
            }
        }
        private Nullable<global::System.Int32> _ExpectedWorkHours;
        partial void OnExpectedWorkHoursChanging(Nullable<global::System.Int32> value);
        partial void OnExpectedWorkHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TimeSpend
        {
            get
            {
                return _TimeSpend;
            }
            set
            {
                OnTimeSpendChanging(value);
                ReportPropertyChanging("TimeSpend");
                _TimeSpend = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeSpend");
                OnTimeSpendChanged();
            }
        }
        private Nullable<global::System.Int32> _TimeSpend;
        partial void OnTimeSpendChanging(Nullable<global::System.Int32> value);
        partial void OnTimeSpendChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaskCategoryName
        {
            get
            {
                return _TaskCategoryName;
            }
            set
            {
                OnTaskCategoryNameChanging(value);
                ReportPropertyChanging("TaskCategoryName");
                _TaskCategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaskCategoryName");
                OnTaskCategoryNameChanged();
            }
        }
        private global::System.String _TaskCategoryName;
        partial void OnTaskCategoryNameChanging(global::System.String value);
        partial void OnTaskCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Finished
        {
            get
            {
                return _Finished;
            }
            set
            {
                OnFinishedChanging(value);
                ReportPropertyChanging("Finished");
                _Finished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Finished");
                OnFinishedChanged();
            }
        }
        private global::System.Byte _Finished = 0;
        partial void OnFinishedChanging(global::System.Byte value);
        partial void OnFinishedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "ProjectTask", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("EntityModel.ProjectTask", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("EntityModel.ProjectTask", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("EntityModel.ProjectTask", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("EntityModel.ProjectTask", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "TaskTaskAssignment", "TaskAssignment")]
        public EntityCollection<TaskAssignment> TaskAssignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskAssignment>("EntityModel.TaskTaskAssignment", "TaskAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskAssignment>("EntityModel.TaskTaskAssignment", "TaskAssignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "TaskCategoryTask", "TaskCategory")]
        public TaskCategory TaskCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskCategory>("EntityModel.TaskCategoryTask", "TaskCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskCategory>("EntityModel.TaskCategoryTask", "TaskCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskCategory> TaskCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskCategory>("EntityModel.TaskCategoryTask", "TaskCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskCategory>("EntityModel.TaskCategoryTask", "TaskCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="TaskAssignment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskAssignment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskAssignment object.
        /// </summary>
        /// <param name="taskAssignmentID">Initial value of the TaskAssignmentID property.</param>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        /// <param name="developerID">Initial value of the DeveloperID property.</param>
        public static TaskAssignment CreateTaskAssignment(global::System.Int32 taskAssignmentID, global::System.Int32 taskID, global::System.Int32 developerID)
        {
            TaskAssignment taskAssignment = new TaskAssignment();
            taskAssignment.TaskAssignmentID = taskAssignmentID;
            taskAssignment.TaskID = taskID;
            taskAssignment.DeveloperID = developerID;
            return taskAssignment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskAssignmentID
        {
            get
            {
                return _TaskAssignmentID;
            }
            set
            {
                if (_TaskAssignmentID != value)
                {
                    OnTaskAssignmentIDChanging(value);
                    ReportPropertyChanging("TaskAssignmentID");
                    _TaskAssignmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskAssignmentID");
                    OnTaskAssignmentIDChanged();
                }
            }
        }
        private global::System.Int32 _TaskAssignmentID;
        partial void OnTaskAssignmentIDChanging(global::System.Int32 value);
        partial void OnTaskAssignmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                OnTaskIDChanging(value);
                ReportPropertyChanging("TaskID");
                _TaskID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskID");
                OnTaskIDChanged();
            }
        }
        private global::System.Int32 _TaskID;
        partial void OnTaskIDChanging(global::System.Int32 value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeveloperID
        {
            get
            {
                return _DeveloperID;
            }
            set
            {
                OnDeveloperIDChanging(value);
                ReportPropertyChanging("DeveloperID");
                _DeveloperID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeveloperID");
                OnDeveloperIDChanged();
            }
        }
        private global::System.Int32 _DeveloperID;
        partial void OnDeveloperIDChanging(global::System.Int32 value);
        partial void OnDeveloperIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "TaskTaskAssignment", "Task")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("EntityModel.TaskTaskAssignment", "Task").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("EntityModel.TaskTaskAssignment", "Task").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("EntityModel.TaskTaskAssignment", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("EntityModel.TaskTaskAssignment", "Task", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "DeveloperTaskAssignment", "Developer")]
        public Developer Developer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperTaskAssignment", "Developer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperTaskAssignment", "Developer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Developer> DeveloperReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Developer>("EntityModel.DeveloperTaskAssignment", "Developer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Developer>("EntityModel.DeveloperTaskAssignment", "Developer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="TaskCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskCategory object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        public static TaskCategory CreateTaskCategory(global::System.String name)
        {
            TaskCategory taskCategory = new TaskCategory();
            taskCategory.Name = name;
            return taskCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "TaskCategoryTask", "Task")]
        public EntityCollection<Task> Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("EntityModel.TaskCategoryTask", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("EntityModel.TaskCategoryTask", "Task", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="teamName">Initial value of the TeamName property.</param>
        public static Team CreateTeam(global::System.String teamName)
        {
            Team team = new Team();
            team.TeamName = teamName;
            return team;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TeamName
        {
            get
            {
                return _TeamName;
            }
            set
            {
                if (_TeamName != value)
                {
                    OnTeamNameChanging(value);
                    ReportPropertyChanging("TeamName");
                    _TeamName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TeamName");
                    OnTeamNameChanged();
                }
            }
        }
        private global::System.String _TeamName;
        partial void OnTeamNameChanging(global::System.String value);
        partial void OnTeamNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "TeamDeveloper", "Developer")]
        public EntityCollection<Developer> Developer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Developer>("EntityModel.TeamDeveloper", "Developer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Developer>("EntityModel.TeamDeveloper", "Developer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityModel", Name="Topic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Topic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Topic object.
        /// </summary>
        /// <param name="topicID">Initial value of the TopicID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Topic CreateTopic(global::System.Int32 topicID, global::System.String name)
        {
            Topic topic = new Topic();
            topic.TopicID = topicID;
            topic.Name = name;
            return topic;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TopicID
        {
            get
            {
                return _TopicID;
            }
            set
            {
                if (_TopicID != value)
                {
                    OnTopicIDChanging(value);
                    ReportPropertyChanging("TopicID");
                    _TopicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TopicID");
                    OnTopicIDChanged();
                }
            }
        }
        private global::System.Int32 _TopicID;
        partial void OnTopicIDChanging(global::System.Int32 value);
        partial void OnTopicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityModel", "TopicMessage", "Message")]
        public EntityCollection<Message> Message
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("EntityModel.TopicMessage", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("EntityModel.TopicMessage", "Message", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
