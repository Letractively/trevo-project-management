
@model PrjctMngmt.Models.Task

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(function () {
        $(".datetimepicker").datetimepicker({
            showSecond: true,
            timeFormat: 'hh:mm:ss',
            dateFormat: 'dd-mm-yy'
        });
    });
</script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Task</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            Start date
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.StartDate, new { @class = "datetimepicker" })
            @Html.ValidationMessageFor(model => model.StartDate)
        </div>

        <div class="editor-label">
            End date
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EndDate, new { @class = "datetimepicker" })
            @Html.ValidationMessageFor(model => model.EndDate)
        </div>

        <div class="editor-label">
            Expected work hours
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ExpectedWorkHours)
            @Html.ValidationMessageFor(model => model.ExpectedWorkHours)
        </div>

        <div class="editor-label">
            Time spend
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TimeSpend)
            @Html.ValidationMessageFor(model => model.TimeSpend)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
        </div>
        <div class="editor-field">
            @Html.DropDownList("Status", (IEnumerable<SelectListItem>)ViewData["Status"], "")
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            Task category
        </div>
        <div class="editor-field">
            @Html.DropDownList("Name", (IEnumerable<SelectListItem>) ViewData["TaskCategories"], "")
        </div>

        <div class="editor-label">
            Project
        </div>
        <div class="editor-field">
            @Html.DropDownList("ProjectID", (IEnumerable<SelectListItem>) ViewData["Projects"], "")
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
