@model IEnumerable<PrjctMngmt.Models.Team>

@{
    ViewBag.Title = "Index";
}

<script type="text/javascript">
    $(function () {
        // there's the developers and the team
        var $developers = $(".developers"),
            $teams = $(".team");

        // let the developers be draggable
        $("li", $developers).draggable({
            cancel: "a.ui-icon", // clicking an icon won't initiate dragging
            revert: "invalid", // when not dropped, the item will revert back to its initial position
            helper: "clone",
            cursor: "move"
        });

        // let the team be droppable, accepting developers
        $teams.droppable({
            accept: '.developers > *, .team > *', //allow also team to team drops
            hoverClass: "ui-state-highlight",
            drop: function (event, ui) {
                moveToTeam(ui.draggable, $(this));
            }
        });

        // let developers be droppable, accepting developers from teams
        $developers.droppable({
            accept: ".team > li",
            hoverClass: "ui-state-highlight",
            drop: function (event, ui) {
                unbindDeveloper(ui.draggable);
            }
        });

        // add developer to team function
        var removeMember = "<a href='link/to/unbind/script/when/js/is/off' title='Unbind developer' class='ui-icon ui-icon-remove'>Unbind developer</a>";
        function moveToTeam($item, $dropped) {
            $item.fadeOut(function () {
                if (!$item.hasOwnProperty(removeMember)) {
                    $item.find("a.ui-icon-remove").remove();
                    $item.append(removeMember);
                }
                $item.appendTo($dropped).fadeIn(function () { });
            });
        }

        // remove developer from the team
        function unbindDeveloper($item) {
            $item.fadeOut(function () {
                $item
					.find("a.ui-icon-remove")
						.remove()
					.end()
					.css("width", "96px")
					.find("img")
						.css("height", "72px")
					.end()
					.appendTo($developers)
					.fadeIn();
            });
        }

        // resolve the icons behavior with event delegation
        $("ul.developers > li").click(function (event) {
            var $item = $(this),
				$target = $(event.target);
            if ($target.is("a.ui-icon-remove")) {
                unbindDeveloper($item);
            }
            return false;
        });
    });
</script>

<script type="text/javascript">
    $(function () {
        $("#dialog").dialog({
            autoOpen: false, width: 400, modal: true,
            buttons: {
                "Save": function () {
                    $.post("/Developer/CreateDialog",
                        $("#DeveloperForm").serialize(),
                        function () {
                            $("#dialog").dialog("close");
                            window.location.reload();
                        });
                },
                Cancel: function () { $(this).dialog("close"); }
            }
        });
        $(".addDeveloper").click(function () {
            $("#dialog").html("")
                .dialog("option", "title", "Create developer")
                .load("/Developer/CreateDialog", function () { $("#dialog").dialog("open"); });
        });
    });
</script>

<div class="ui-widget ui-helper-clearfix">
    <b>Developers</b>
    <ul class="developers ui-helper-reset ui-helper-clearfix">
        @foreach (var dev in (List<string>)ViewData["Developers"])
        {
            <li id="@dev" class="ui-widget-content ui-corner-tr">
                @dev
            </li>
        }
        <img alt="Create developer" class="addDeveloper ButtonLink" src="../../Content/themes/base/images/plus-sign_small.png" />
    </ul>
    <br />
    <b>Teams</b>
    <br />
    @foreach (var team in Model)
    {
        <div id="@team.TeamName" class="team ui-widget-content">
            <p>@team.TeamName</p>
        </div>
    }
</div>
<div id="dialog"></div>
